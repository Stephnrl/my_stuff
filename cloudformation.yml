AWSTemplateFormatVersion: '2010-09-09'
Description: 'GitHub OIDC with combined branch and environment restrictions for maximum security'

Parameters:
  GitHubOrganization:
    Type: String
    Description: 'GitHub organization name'
    Default: 'your-org'
  
  GitHubRepository:
    Type: String
    Description: 'GitHub repository name'
    Default: 'your-repo'
  
  ProdTerraformStateBucket:
    Type: String
    Description: 'S3 bucket for production Terraform state'
    Default: ''
  
  ProdCustomerAccountRole:
    Type: String
    Description: 'ARN of role to assume in production customer account'
    Default: ''

Conditions:
  HasProdBucket: !Not [!Equals [!Ref ProdTerraformStateBucket, '']]
  HasProdCustomerRole: !Not [!Equals [!Ref ProdCustomerAccountRole, '']]

Resources:
  # OIDC Identity Provider
  GitHubOIDCProvider:
    Type: AWS::IAM::OIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList:
        - 6938fd4d98bab03faadb97b34396831e3780aea1
        - 1c58a3a8518e8759bf075b76b750d4f2df264fcd

  # NonProd Role - main OR develop branch + nonprod environment
  NonProdRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: GitHubActions-NonProd-BranchRestricted
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Ref GitHubOIDCProvider
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                'token.actions.githubusercontent.com:aud': 'sts.amazonaws.com'
              ForAllValues:StringLike:
                'token.actions.githubusercontent.com:sub': 
                  - !Sub 'repo:${GitHubOrganization}/${GitHubRepository}:ref:refs/heads/main'
                  - !Sub 'repo:${GitHubOrganization}/${GitHubRepository}:ref:refs/heads/develop'
                  - !Sub 'repo:${GitHubOrganization}/${GitHubRepository}:environment:nonprod'

  # Production Role - ONLY main branch AND prod environment (double restriction)
  ProductionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: GitHubActions-Prod-MainBranchOnly
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Ref GitHubOIDCProvider
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                'token.actions.githubusercontent.com:aud': 'sts.amazonaws.com'
              ForAllValues:StringEquals:
                'token.actions.githubusercontent.com:sub': 
                  - !Sub 'repo:${GitHubOrganization}/${GitHubRepository}:ref:refs/heads/main'
                  - !Sub 'repo:${GitHubOrganization}/${GitHubRepository}:environment:prod'

  # Alternative: Even more restrictive - require BOTH branch AND environment in single claim
  UltraSecureProductionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: GitHubActions-UltraSecure-Prod
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          # This approach requires a job that runs on main branch AND uses prod environment
          - Effect: Allow
            Principal:
              Federated: !Ref GitHubOIDCProvider
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                'token.actions.githubusercontent.com:aud': 'sts.amazonaws.com'
                'token.actions.githubusercontent.com:sub': !Sub 'repo:${GitHubOrganization}/${GitHubRepository}:environment:prod'
              # Additional check to ensure it's from main branch (using repository_owner claim)
              StringLike:
                'token.actions.githubusercontent.com:ref': 'refs/heads/main'

  # NonProd Permissions (broader for development)
  NonProdPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: NonProdBranchRestrictedPermissions
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - sts:GetCallerIdentity
              - ec2:*
              - s3:*
              - lambda:*
              - logs:*
            Resource: '*'
            Condition:
              StringEquals:
                'aws:RequestedRegion': ['us-east-1', 'us-west-2']
      Roles:
        - !Ref NonProdRole

  # Production Permissions (minimal, mostly cross-account)
  ProductionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ProdMainBranchOnlyPermissions
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - sts:GetCallerIdentity
              - sts:TagSession
            Resource: '*'
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:ListBucket
            Resource: 
              - !Sub '${ProdTerraformStateBucket}'
              - !Sub '${ProdTerraformStateBucket}/*'
            Condition:
              StringEquals:
                'aws:RequestedRegion': 'us-east-1'
      Roles:
        - !Ref ProductionRole
        - !Ref UltraSecureProductionRole

  # Cross-account role assumption for production
  ProdCrossAccountPolicy:
    Type: AWS::IAM::Policy
    Condition: HasProdCustomerRole
    Properties:
      PolicyName: ProdCrossAccountMainBranchOnly
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Resource: !Ref ProdCustomerAccountRole
            Condition:
              StringEquals:
                'aws:RequestedRegion': 'us-east-1'
              # Additional security: restrict time of day for production deployments
              ForAllValues:StringEquals:
                'aws:RequestedTime': ['09:00:00Z/17:00:00Z']  # Business hours UTC
      Roles:
        - !Ref ProductionRole
        - !Ref UltraSecureProductionRole

Outputs:
  NonProdRoleArn:
    Description: 'NonProd role ARN (main/develop branches)'
    Value: !GetAtt NonProdRole.Arn
  
  ProductionRoleArn:
    Description: 'Production role ARN (main branch only)'
    Value: !GetAtt ProductionRole.Arn
  
  UltraSecureRoleArn:
    Description: 'Ultra-secure production role ARN (main branch + prod environment)'
    Value: !GetAtt UltraSecureProductionRole.Arn
  
  SecurityNote:
    Description: 'Security implementation details'
    Value: |
      NonProd: main OR develop branches + nonprod environment
      Prod: main branch ONLY + prod environment required
      UltraSecure: main branch + prod environment + business hours only
