.PHONY: check-vulnerabilities-detailed
check-vulnerabilities-detailed:
	@echo "Checking detailed vulnerability scan results..."
	@jq -r '.images[] | .target' images.json | while read target_image; do \
		repo_name=$$(echo $$target_image | cut -d':' -f1); \
		echo "Checking vulnerabilities for repository: $$repo_name"; \
		$(MAKE) query-repo-vulnerabilities REPO=$$repo_name; \
		echo ""; \
	done

.PHONY: query-repo-vulnerabilities
query-repo-vulnerabilities:
	@echo "Querying vulnerabilities for repository: $(REPO)"
	@az graph query \
		--graph-query "SecurityResources \
		| where type == 'microsoft.security/assessments' \
		| where properties.displayName contains 'Azure registry container images should have vulnerabilities resolved' \
		| summarize by assessmentKey=name \
		| join kind=inner ( \
			securityresources \
			| where type == 'microsoft.security/assessments/subassessments' \
			| extend assessmentKey = extract('.*assessments/(.+?)/.*',1,  id) \
		) on assessmentKey \
		| project assessmentKey, subassessmentKey=name, id, properties, resourceGroup, subscriptionId, tenantId \
		| extend \
			description = properties.description, \
			displayName = properties.displayName, \
			resourceId = properties.resourceDetails.id, \
			resourceSource = properties.resourceDetails.source, \
			category = properties.category, \
			severity = properties.status.severity, \
			code = properties.status.code, \
			timeGenerated = properties.timeGenerated, \
			remediation = properties.remediation, \
			impact = properties.impact, \
			vulnId = properties.id, \
			additionalData = todynamic(properties.additionalData) \
		| where isnotempty(additionalData.artifactDetails) \
		| extend \
			registryName = tostring(additionalData.artifactDetails.registryHost), \
			repository = tostring(additionalData.artifactDetails.repositoryName), \
			imageDigest = tostring(additionalData.artifactDetails.digest) \
		| where registryName contains '$(ACR_REGISTRY_NAME)' \
		| where repository == '$(REPO)' \
		| project registryName, repository, imageDigest, severity, displayName, description, vulnId, timeGenerated \
		| order by severity desc, timeGenerated desc" \
		--output table

.PHONY: vulnerability-summary-by-repo
vulnerability-summary-by-repo:
	@echo "Vulnerability summary by repository..."
	@az graph query \
		--graph-query "SecurityResources \
		| where type == 'microsoft.security/assessments' \
		| where properties.displayName contains 'Azure registry container images should have vulnerabilities resolved' \
		| summarize by assessmentKey=name \
		| join kind=inner ( \
			securityresources \
			| where type == 'microsoft.security/assessments/subassessments' \
			| extend assessmentKey = extract('.*assessments/(.+?)/.*',1,  id) \
		) on assessmentKey \
		| project assessmentKey, subassessmentKey=name, id, properties, resourceGroup, subscriptionId, tenantId \
		| extend \
			description = properties.description, \
			displayName = properties.displayName, \
			resourceId = properties.resourceDetails.id, \
			resourceSource = properties.resourceDetails.source, \
			category = properties.category, \
			severity = properties.status.severity, \
			code = properties.status.code, \
			timeGenerated = properties.timeGenerated, \
			remediation = properties.remediation, \
			impact = properties.impact, \
			vulnId = properties.id, \
			additionalData = todynamic(properties.additionalData) \
		| where isnotempty(additionalData.artifactDetails) \
		| extend \
			registryName = tostring(additionalData.artifactDetails.registryHost), \
			repository = tostring(additionalData.artifactDetails.repositoryName), \
			imageDigest = tostring(additionalData.artifactDetails.digest) \
		| where registryName contains '$(ACR_REGISTRY_NAME)' \
		| summarize \
			Critical = countif(severity == 'High'), \
			High = countif(severity == 'Medium'), \
			Medium = countif(severity == 'Low'), \
			Total = count() \
		by repository \
		| order by Critical desc, High desc" \
		--output table

.PHONY: export-vulnerability-data
export-vulnerability-data:
	@echo "Exporting detailed vulnerability data to JSON..."
	@az graph query \
		--graph-query "SecurityResources \
		| where type == 'microsoft.security/assessments' \
		| where properties.displayName contains 'Azure registry container images should have vulnerabilities resolved' \
		| summarize by assessmentKey=name \
		| join kind=inner ( \
			securityresources \
			| where type == 'microsoft.security/assessments/subassessments' \
			| extend assessmentKey = extract('.*assessments/(.+?)/.*',1,  id) \
		) on assessmentKey \
		| project assessmentKey, subassessmentKey=name, id, properties, resourceGroup, subscriptionId, tenantId \
		| extend \
			description = properties.description, \
			displayName = properties.displayName, \
			resourceId = properties.resourceDetails.id, \
			resourceSource = properties.resourceDetails.source, \
			category = properties.category, \
			severity = properties.status.severity, \
			code = properties.status.code, \
			timeGenerated = properties.timeGenerated, \
			remediation = properties.remediation, \
			impact = properties.impact, \
			vulnId = properties.id, \
			additionalData = todynamic(properties.additionalData) \
		| where isnotempty(additionalData.artifactDetails) \
		| extend \
			registryName = tostring(additionalData.artifactDetails.registryHost), \
			repository = tostring(additionalData.artifactDetails.repositoryName), \
			imageDigest = tostring(additionalData.artifactDetails.digest) \
		| where registryName contains '$(ACR_REGISTRY_NAME)' \
		| project registryName, repository, imageDigest, severity, displayName, description, vulnId, timeGenerated, remediation, impact" \
		--output json > vulnerability_report_$(shell date +%Y%m%d_%H%M%S).json
	@echo "Vulnerability data exported to vulnerability_report_$(shell date +%Y%m%d_%H%M%S).json"
