# ============================================================================
# TMUX CONFIGURATION FOR DEVELOPMENT
# ============================================================================

# Change prefix key from Ctrl-b to Ctrl-a (easier to reach)
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# ============================================================================
# BASIC SETTINGS
# ============================================================================

# Enable mouse support
set -g mouse on

# Increase scrollback buffer size
set -g history-limit 10000

# Enable 256 colors
set -g default-terminal "screen-256color"

# Start window and pane indices at 1
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows when one is closed
set -g renumber-windows on

# Enable activity alerts
setw -g monitor-activity on
set -g visual-activity on

# ============================================================================
# KEY BINDINGS
# ============================================================================

# Reload config file
bind r source-file ~/.tmux.conf \; display "Config reloaded!"

# Split panes with | and -
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# Navigate panes with vim-like keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Quick window switching
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5

# Create new window in current path
bind c new-window -c "#{pane_current_path}"

# ============================================================================
# STATUS BAR CONFIGURATION
# ============================================================================

# Status bar position
set-option -g status-position top

# Status bar colors
set -g status-bg colour235
set -g status-fg colour255

# Left status bar
set -g status-left-length 40
set -g status-left "#[fg=colour39,bg=colour235,bold] 🐍 #S #[fg=colour245]| "

# Right status bar
set -g status-right-length 100
set -g status-right "#[fg=colour245]| #[fg=colour255]💻 #h #[fg=colour245]| #[fg=colour255]📅 %Y-%m-%d #[fg=colour245]| #[fg=colour255]🕐 %H:%M "

# Window status format
setw -g window-status-format "#[fg=colour245] #I:#W "
setw -g window-status-current-format "#[fg=colour39,bg=colour238,bold] #I:#W "

# Pane borders
set -g pane-border-style fg=colour238
set -g pane-active-border-style fg=colour39

# ============================================================================
# COPY MODE (VI-STYLE)
# ============================================================================

# Enable vi mode
setw -g mode-keys vi

# Copy mode bindings
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# WSL clipboard integration
if-shell "uname -r | grep -q microsoft" {
    bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "clip.exe"
    bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "clip.exe"
}

# ============================================================================
# GIT-AWARE STATUS BAR
# ============================================================================

# Function to get git branch
set -g @git_branch_cmd "cd #{pane_current_path}; git rev-parse --abbrev-ref HEAD 2>/dev/null"
set -g @git_status_cmd "cd #{pane_current_path}; git status --porcelain 2>/dev/null | wc -l"
set -g @git_ahead_cmd "cd #{pane_current_path}; git rev-list --count @{u}..HEAD 2>/dev/null"
set -g @git_behind_cmd "cd #{pane_current_path}; git rev-list --count HEAD..@{u} 2>/dev/null"

# Enhanced status bar with Git info
set -g status-left-length 60
set -g status-left "#[fg=colour39,bg=colour235,bold] 🐍 #S #[fg=colour245]| #[fg=colour255]#{?#{!=:#{pane_current_path},#{b:pane_current_path}},📁 #{b:pane_current_path},}"

# Git-aware right status bar
set -g status-right-length 150
set -g status-right "#{?#{!=:,#(cd #{pane_current_path}; git rev-parse --is-inside-work-tree 2>/dev/null)},#[fg=colour82]🌿 #(cd #{pane_current_path}; git rev-parse --abbrev-ref HEAD 2>/dev/null)#[fg=colour245] | #[fg=colour255]#(cd #{pane_current_path}; git status --porcelain 2>/dev/null | wc -l | sed 's/^0$/✓/' | sed 's/^[^✓].*/📝/')#[fg=colour245] | ,}#[fg=colour255]💻 #h #[fg=colour245]| #[fg=colour255]📅 %Y-%m-%d #[fg=colour245]| #[fg=colour255]🕐 %H:%M "

# Update status bar more frequently (for Git changes)
set -g status-interval 2

# ============================================================================
# GIT-SPECIFIC KEY BINDINGS
# ============================================================================

# Git operations in popups (clean and non-intrusive)
bind g display-popup -w 80% -h 80% -E "cd #{pane_current_path}; ~/.tmux/scripts/git-dashboard.sh ."
bind s display-popup -E "cd #{pane_current_path}; git status"
bind d display-popup -w 90% -h 90% -E "cd #{pane_current_path}; git diff"
bind l display-popup -w 90% -h 90% -E "cd #{pane_current_path}; git log --oneline -20"
bind b display-popup -E "cd #{pane_current_path}; git branch -a"

# Quick Git commands (send to active pane)
bind S send-keys "git status" C-m
bind A send-keys "git add ." C-m
bind D send-keys "git diff" C-m
bind L send-keys "git log --oneline -10" C-m

# Git workflow shortcuts
bind-key C-g command-prompt -p "Git add and commit:" "send-keys 'git add . && git commit -m \"%1\"' C-m"
bind-key C-p send-keys "git push" C-m
bind-key C-u send-keys "git pull" C-m
