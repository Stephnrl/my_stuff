---
- name: Run ghe-motd command to gather system information
  command: ghe-motd
  register: ghe_motd
  changed_when: false

- name: Parse version information
  set_fact:
    ghe_version: "{{ ghe_motd.stdout | regex_search('Release version: ([0-9]+\\.[0-9]+\\.[0-9]+)', '\\1') | first }}"
  when: ghe_motd.stdout is search('Release version:')

- name: Parse CPU and RAM information
  set_fact:
    ghe_cpu: "{{ ghe_motd.stdout | regex_search('([0-9]+) CPUs', '\\1') | first }}"
    ghe_ram: "{{ ghe_motd.stdout | regex_search('([0-9]+)GB RAM', '\\1') | first }}"
    ghe_platform: "{{ ghe_motd.stdout | regex_search('RAM on ([A-Za-z]+)', '\\1') | first }}"
  when: ghe_motd.stdout is search('CPUs')

- name: Parse root disk usage
  set_fact:
    root_disk_usage: "{{ ghe_motd.stdout | regex_search('Usage for root disk: ([0-9]+G) of ([0-9]+G) \\(([0-9]+)%\\)', '\\1') | first }}"
    root_disk_total: "{{ ghe_motd.stdout | regex_search('Usage for root disk: ([0-9]+G) of ([0-9]+G) \\(([0-9]+)%\\)', '\\2') | first }}"
    root_disk_percent: "{{ ghe_motd.stdout | regex_search('Usage for root disk: ([0-9]+G) of ([0-9]+G) \\(([0-9]+)%\\)', '\\3') | first | int }}"
  when: ghe_motd.stdout is search('Usage for root disk:')

- name: Parse user data disk usage
  set_fact:
    user_disk_usage: "{{ ghe_motd.stdout | regex_search('Usage for user data disk: ([0-9]+G) of ([0-9]+G) \\(([0-9]+)%\\)', '\\1') | first }}"
    user_disk_total: "{{ ghe_motd.stdout | regex_search('Usage for user data disk: ([0-9]+G) of ([0-9]+G) \\(([0-9]+)%\\)', '\\2') | first }}"
    user_disk_percent: "{{ ghe_motd.stdout | regex_search('Usage for user data disk: ([0-9]+G) of ([0-9]+G) \\(([0-9]+)%\\)', '\\3') | first | int }}"
  when: ghe_motd.stdout is search('Usage for user data disk:')

- name: Parse license information
  set_fact:
    license_type: "{{ ghe_motd.stdout | regex_search('License: ([^;]+);', '\\1') | first }}"
    license_seats_used: "{{ ghe_motd.stdout | regex_search('seats ([0-9]+) of ([0-9]+);', '\\1') | first | int }}"
    license_seats_total: "{{ ghe_motd.stdout | regex_search('seats ([0-9]+) of ([0-9]+);', '\\2') | first | int }}"
    license_days_remaining: "{{ ghe_motd.stdout | regex_search('will expire in ([0-9]+) days', '\\1') | first | int }}"
  when: ghe_motd.stdout is search('License:')

- name: Display parsed system information
  debug:
    msg: |
      GitHub Enterprise Server Information:
      - Version: {{ ghe_version }}
      - Hardware: {{ ghe_cpu }} CPUs, {{ ghe_ram }}GB RAM on {{ ghe_platform }}
      - Root Disk: {{ root_disk_usage }} of {{ root_disk_total }} ({{ root_disk_percent }}%)
      - User Disk: {{ user_disk_usage }} of {{ user_disk_total }} ({{ user_disk_percent }}%)
      - License: {{ license_type }}; {{ license_seats_used }}/{{ license_seats_total }} seats; expires in {{ license_days_remaining }} days

- name: Check if disk space requirements are met
  assert:
    that:
      - user_disk_percent | int <= (100 - min_disk_space_percent | int)
    fail_msg: "FAILED: User data disk does not have at least {{ min_disk_space_percent }}% free space (currently {{ 100 - user_disk_percent }}% free)"
    success_msg: "PASSED: User data disk has {{ 100 - user_disk_percent }}% free space, which meets the {{ min_disk_space_percent }}% minimum requirement"

- name: Check if license is valid
  assert:
    that:
      - license_days_remaining | int > 30
    fail_msg: "WARNING: License will expire in {{ license_days_remaining }} days"
    success_msg: "PASSED: License is valid for {{ license_days_remaining }} days"
