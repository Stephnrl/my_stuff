name: Deploy Azure Infrastructure

on:
  push:
    branches: [ main ]
    paths:
      - 'terraform/**.tf'
      - 'terraform/environments/**'
      - '.github/workflows/deploy-terraform.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'terraform/**.tf'
      - 'terraform/environments/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'nonprod'
        type: choice
        options:
          - nonprod
          - prod

permissions:
  id-token: write  # Required for OIDC
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'nonprod' }}
    defaults:
      run:
        working-directory: terraform
    
    env:
      TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Azure Login with OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"
      
      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ secrets.TFSTATE_RESOURCE_GROUP }}" \
            -backend-config="storage_account_name=${{ secrets.TFSTATE_STORAGE_ACCOUNT }}" \
            -backend-config="container_name=${{ secrets.TFSTATE_CONTAINER }}" \
            -backend-config="key=${{ github.event.inputs.environment || 'nonprod' }}.tfstate" \
            -backend-config="environment=usgovernment"
      
      - name: Setup Terraform Workspace
        run: |
          terraform workspace select ${{ github.event.inputs.environment || 'nonprod' }} || terraform workspace new ${{ github.event.inputs.environment || 'nonprod' }}
      
      - name: Terraform Format
        run: terraform fmt -check
      
      - name: Terraform Plan
        run: |
          terraform plan \
            -var-file="environments/${{ github.event.inputs.environment || 'nonprod' }}.tfvars" \
            -out=tfplan
      
      - name: Terraform Apply
        if: github.event_name != 'pull_request'
        run: terraform apply -auto-approve tfplan
