- name: Create GitHub Release
  if: success()
  shell: pwsh
  env:
    GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  run: |
    $tagName = "${{ steps.version.outputs.VERSION_TAG }}"
    $releaseName = "${{ env.MODULE_NAME }} ${{ steps.version.outputs.VERSION }}"
    
    # Prepare release notes
    $releaseNotes = @"
    ## ðŸ“¦ Module: ${{ env.MODULE_NAME }} v${{ steps.version.outputs.VERSION }}
    
    ### Installation
    ``````powershell
    Install-Module -Name ${{ env.MODULE_NAME }} -Repository GitHubPackages
    ``````
    
    ### Recent Changes
    $(git log --oneline -n 5 --pretty=format:"- %s")
    "@
    
    # Create release using GitHub API
    $headers = @{
      "Authorization" = "Bearer $env:GH_TOKEN"
      "Accept" = "application/vnd.github.v3+json"
    }
    
    $body = @{
      tag_name = $tagName
      target_commitish = "${{ github.sha }}"
      name = $releaseName
      body = $releaseNotes
      draft = $false
      prerelease = $false
    } | ConvertTo-Json
    
    try {
      $response = Invoke-RestMethod `
        -Uri "https://api.github.com/repos/${{ github.repository }}/releases" `
        -Method Post `
        -Headers $headers `
        -Body $body `
        -ContentType "application/json"
      
      Write-Host "âœ… Created GitHub release: $($response.html_url)"
    }
    catch {
      if ($_.Exception.Response.StatusCode -eq 422) {
        Write-Host "Release $tagName already exists"
      } else {
        Write-Warning "Failed to create release: $_"
      }
    }
