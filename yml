# MkDocs with Read the Docs Theme Setup

## Installation

First, install MkDocs and the Read the Docs theme:

```bash
# Using pip
pip install mkdocs
pip install mkdocs-rtd-dropdown  # Enhanced RTD theme with dropdown support

# Or using pipenv
pipenv install mkdocs mkdocs-rtd-dropdown

# Or using requirements.txt
echo "mkdocs>=1.5.0" >> requirements.txt
echo "mkdocs-rtd-dropdown>=0.0.12" >> requirements.txt
pip install -r requirements.txt
```

## Project Structure

Create the following directory structure:

```
my-docs/
├── mkdocs.yml          # Main configuration file
├── docs/               # Documentation source files
│   ├── index.md        # Homepage
│   ├── getting-started.md
│   ├── user-guide/
│   │   ├── installation.md
│   │   └── configuration.md
│   ├── api/
│   │   ├── overview.md
│   │   └── endpoints.md
│   └── assets/         # Images and other assets
│       └── logo.png
└── site/               # Generated static site (git-ignored)
```

## Configuration File (mkdocs.yml)

```yaml
# Site Information
site_name: My Project Documentation
site_description: 'Complete documentation for My Project'
site_author: 'Your Team'
site_url: 'https://docs.example.com'

# Repository (optional, adds edit links)
repo_name: 'username/repo'
repo_url: 'https://github.com/username/repo'
edit_uri: 'edit/main/docs/'

# Copyright
copyright: 'Copyright &copy; 2025 Your Company'

# Theme Configuration
theme:
  name: readthedocs
  # Alternative: use 'mkdocs-rtd-dropdown' for enhanced version
  # name: rtd-dropdown
  
  # Theme customization
  highlightjs: true
  hljs_languages:
    - yaml
    - python
    - bash
    - json
    - dockerfile
  
  # Navigation
  prev_next_buttons_location: bottom
  navigation_depth: 4
  collapse_navigation: false
  sticky_navigation: true
  titles_only: false
  
  # Additional features
  include_homepage_in_sidebar: true
  include_search_page: false
  search_index_only: true
  
  # Analytics (optional)
  analytics:
    gtag: G-XXXXXXXXXX

# Navigation Structure
nav:
  - Home: index.md
  - Getting Started: getting-started.md
  - User Guide:
      - Installation: user-guide/installation.md
      - Configuration: user-guide/configuration.md
  - API Reference:
      - Overview: api/overview.md
      - Endpoints: api/endpoints.md
  - Changelog: CHANGELOG.md
  - About: about.md

# Plugins
plugins:
  - search:
      separator: '[\s\-\.]+'
      lang:
        - en
      prebuild_index: true
  - minify:
      minify_html: true
      minify_js: true
      minify_css: true
      htmlmin_opts:
        remove_comments: true

# Markdown Extensions
markdown_extensions:
  - admonition              # Note/Warning/Tip boxes
  - codehilite:
      guess_lang: false
      use_pygments: true
  - toc:
      permalink: true
      toc_depth: 3
  - pymdownx.superfences    # Code blocks with syntax highlighting
  - pymdownx.details        # Collapsible details
  - pymdownx.tabbed         # Tabbed content
  - pymdownx.keys           # Keyboard keys rendering
  - pymdownx.snippets       # Include external files
  - pymdownx.emoji:
      emoji_index: !!python/name:materialx.emoji.twemoji
      emoji_generator: !!python/name:materialx.emoji.to_svg
  - tables
  - footnotes
  - meta
  - attr_list
  - def_list
  - abbr

# Extra Configuration
extra:
  # Version selector (if using mike for versioning)
  version:
    provider: mike
    default: stable
  
  # Social links
  social:
    - icon: fontawesome/brands/github
      link: https://github.com/username
    - icon: fontawesome/brands/docker
      link: https://hub.docker.com/r/username
    - icon: fontawesome/brands/slack
      link: https://slack.example.com
  
  # Custom CSS/JS (optional)
extra_css:
  - assets/css/custom.css
  
extra_javascript:
  - assets/js/custom.js

# Development server settings
dev_addr: '127.0.0.1:8000'
use_directory_urls: true
strict: false
```

## Sample Documentation Page (docs/index.md)

```markdown
# Welcome to My Project Documentation

Welcome to the official documentation for **My Project**. This documentation covers installation, configuration, and usage.

## Quick Start

Get started with My Project in under 5 minutes:

1. Install the package
2. Configure your environment
3. Run your first command

## Features

- **Easy Installation**: Simple pip install
- **Flexible Configuration**: YAML-based config files
- **Extensive API**: RESTful API with comprehensive endpoints
- **DevOps Ready**: Docker support, CI/CD integration

## Navigation

- [Getting Started](getting-started.md) - Installation and setup
- [User Guide](user-guide/installation.md) - Detailed usage instructions
- [API Reference](api/overview.md) - Complete API documentation

!!! note "Version Information"
    This documentation is for version 2.0. For older versions, see the version selector.

!!! warning "Breaking Changes"
    Version 2.0 includes breaking changes. See the [migration guide](migration.md).
```

## Docker Setup (Optional)

```dockerfile
# Dockerfile for serving docs
FROM python:3.11-slim

WORKDIR /docs

COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

COPY mkdocs.yml .
COPY docs/ ./docs/

# Build the static site
RUN mkdocs build

# Serve using built-in server or nginx
CMD ["mkdocs", "serve", "--dev-addr=0.0.0.0:8000"]
```

## CI/CD Integration (GitHub Actions)

```yaml
# .github/workflows/docs.yml
name: Deploy Docs

on:
  push:
    branches: [main]
    paths:
      - 'docs/**'
      - 'mkdocs.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install mkdocs
          pip install mkdocs-rtd-dropdown
      
      - name: Build documentation
        run: mkdocs build
      
      - name: Deploy to GitHub Pages
        run: mkdocs gh-deploy --force
```

## Commands Reference

```bash
# Create new project
mkdocs new my-project

# Serve locally for development
mkdocs serve
# Visit http://127.0.0.1:8000

# Build static site
mkdocs build

# Deploy to GitHub Pages
mkdocs gh-deploy

# Validate links
mkdocs build --strict

# Serve with custom config
mkdocs serve -f custom-mkdocs.yml

# Build with verbose output
mkdocs build --verbose
```

## Custom CSS Example

If you want to customize the Read the Docs theme, create `docs/assets/css/custom.css`:

```css
/* Custom CSS for Read the Docs theme */

/* Adjust primary colors */
.wy-side-nav-search {
    background-color: #2980b9;
}

.wy-nav-top {
    background-color: #2980b9;
}

/* Custom admonition colors */
.admonition.note {
    border-left-color: #2980b9;
}

.admonition.warning {
    border-left-color: #f39c12;
}

.admonition.danger {
    border-left-color: #e74c3c;
}

/* Code block styling */
.codehilite {
    background: #f8f8f8;
    border: 1px solid #e1e4e5;
    border-radius: 3px;
}

/* Improve table styling */
table {
    border-collapse: collapse;
    width: 100%;
    margin-bottom: 1em;
}

table td, table th {
    border: 1px solid #e1e4e5;
    padding: 8px 12px;
}

table th {
    background-color: #f3f3f3;
    font-weight: bold;
}
```

## Tips for DevOps Integration

1. **Version Control**: Always commit `mkdocs.yml` and the `docs/` directory
2. **Automated Builds**: Set up CI/CD to build and deploy on merge to main
3. **Containerization**: Use Docker for consistent builds across environments
4. **Monitoring**: Add analytics to track documentation usage
5. **Search Optimization**: Configure the search plugin for better discoverability
6. **Multi-version Support**: Use `mike` for versioned documentation
7. **Link Validation**: Run `mkdocs build --strict` in CI to catch broken links

## Hosting Options

- **GitHub Pages**: Free, integrated with GitHub repos
- **Read the Docs**: Free for open source, automatic builds
- **Netlify**: Easy deployment with preview builds
- **AWS S3 + CloudFront**: Scalable, with CDN
- **Self-hosted**: Nginx/Apache serving the static site
